%!PS-Adobe-1.0
%%Title: Defender_GSRwithC.java
%%Creator: Id: a2ps,v 1.42 1998/12/25 16:59:26 utashiro Exp 
%%CreationDate: Wed Aug 16 13:53:32 Japan 2000
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentPaperSizes: A4
%%Orientation: Landscape
%%EndComments

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
%% SelectTray
statusdict /a4tray known { statusdict begin a4tray end } if
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/lmargin 1.2 inch def
/smargin 1.2 inch def
/paper_adjust 0.05 inch def
/noborder false def
/noheader false def
/headersize 0.22 inch def
/nofooter false def
/nopunchmark true def
/bodyfontsize 6.6 def
/kanjiAsciiRatio 1 def
/lines 66 def
/columns 86 def
/date (Aug 16 2000 13:53) def
/doasciimag false def
%!  PostScript Source Code
%
%  File: imag:/users/local/a2ps/header.ps
%  Created: Tue Nov 29 12:14:02 1988 by miguel@imag (Miguel Santana)
%  Version: 2.0
%  Description: PostScript prolog for a2ps ascii to PostScript program.
% 
%  Edit History:
%  - Original version by evan@csli (Evan Kirshenbaum).
%  - Modified by miguel@imag to:
%    1) Correct an overflow bug when printing page number 10 (operator
%	cvs).
%    2) Define two other variables (sheetwidth, sheetheight) describing
%	the physical page (by default A4 format).
%    3) Minor changes (reorganization, comments, etc).
%  - Modified by tullemans@apolloway.prl.philips.nl
%    1) Correct stack overflows with regard to operators cvs and copy.
%       The resulting substrings where in some cases not popped off 
%       the stack, what can result in a stack overflow.
%    2) Replaced copypage and erasepage by showpage. Page througput
%       degrades severely (see red book page 140) on our ps-printer
%       after printing sheet 16 (i.e. page 8) of a file which was 
%       actually bigger. For this purpose the definitions of startdoc
%       and startpage are changed.
%  - Modified by Tim Clark <T.Clark@uk.ac.warwick> to:
%    1) Print one page per sheet (portrait) as an option.
%    2) Reduce size of file name heading, if it's too big.
%    3) Save and restore PostScript state at begining/end. It now uses
%	conventional %%Page %%Trailer markers.
%    4) Print one wide page per sheet in landscape mode as an option.
%  - Modified by miguel@imag.fr to
%    1) Add new option to print n copies of a file.
%    2) Add new option to suppress heading printing.
%    3) Add new option to suppress page surrounding border printing.
%    4) Add new option to change font size. Number of lines and columns
%	are now automatically adjusted, depending on font size and
%	printing mode used.
%    5) Minor changes (best layout, usage message, etc).
%  - Modified by kanazawa@sra.co.jp to:
%    1) Handle Japanese code
%  - Modified by utashiro@sra.co.jp to:
%    1) Fix bug in printing long label
%    2) Handle carriage-return
%    3) Specify kanji-ascii character retio
%    4) Add footer label
%    5) Change filename->fname becuase ghostscript has operator filename
%    6) Support three different font style
%    7) Incorporate B4 paper support and punchmark contributed
%       by Masami Ueno <cabbage@kki.esi.yamanashi.ac.jp>
%

% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
%
% Permission is granted to copy and distribute this file in modified
% or unmodified form, for noncommercial use, provided (a) this copyright
% notice is preserved, (b) no attempt is made to restrict redistribution
% of this file, and (c) this file is not distributed as part of any
% collection whose redistribution is restricted by a compilation copyright.
%


% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/footerfont /Helvetica-Bold datefontsize getfont def
/mag { doasciimag { [ 1 0 0 asciimagsize 0 0 ] makefont } if } def
/bodynfont /Courier bodyfontsize getfont mag def
/bodybfont /Courier-Bold bodyfontsize getfont mag def
/bodyofont /Courier-BoldOblique bodyfontsize getfont mag def
/fontarray [ bodynfont bodybfont bodyofont ] def
/bodyfont bodynfont def

% Initializing kanji fonts
/kanji_initialized false def
/kanji_init {
   kanji_initialized not
   {
      /bodykfontsize bodyfontsize kanjiAsciiRatio mul def
      /bodyknfont /Ryumin-Light-H bodykfontsize getfont def
      /bodykbfont /GothicBBB-Medium-H bodykfontsize getfont def
      /bodykofont bodykbfont [ 1 0 .2 1 0 0 ] makefont def
      /KanjiRomanDiff 1.2 bodyfontsize mul 1.0 bodykfontsize mul sub def
      /KanjiRomanDiffHalf KanjiRomanDiff 2 div def
      /kfontarray [ bodyknfont bodykbfont bodykofont ] def
      /kanji_initialized true def
   } if
} def

% Backspace width
/backspacewidth
   bodyfont setfont (0) stringwidth pop
   def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize 1.1 mul lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin smargin 3 div def
/leftmargin smargin 2 mul 3 div def
/topmargin lmargin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /punchx .4 inch def           % for PunchMark
   /punchy sheetwidth 2 div def  % for PunchMark
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin 2 mul			% upperx for left page
		dup topmargin add pagewidth add	% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin 2 mul sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /punchx .3 inch def
   /punchy sheetheight 2 div def
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight 
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def
}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
datefont setfont
/datewidth date stringwidth pop def
/pagenumwidth (Page 999) stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add pagenumwidth add
      sub
   def


% Function startdoc: initializes printer and global variables.
/startdoc
    { /sheetside 0 def			% sheet side that contains current page
      /sheet 1 def			% sheet number
   } bind def

% Function newfile: init file name for each new file.
/newfile
    { cleanup
      /fname xdef
      stdfilenamefont setfont
      /filenamewidth fname stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage
      {  noborder not
	    { sheetnumber }
	 if
      }
      {  noheader noborder not and
	    { sheetnumber }
	 if
      }
      ifelse
      showpage 
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.  Page number is stored on the top of stack.
/startpage
    { /pagenum exch def
      sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	      paper_adjust neg 0 translate
	    } if
	} if
      noborder not { printborder } if
      noheader not { printheader } if
      nofooter not { printfooter } if
      nopunchmark not { punchmark } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth pagenumwidth sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom fname stringwidth pop sub 2 div datewidth add
	      filenamefontsize 2 mul 
	   add 
	   headermargin
	rmoveto
        fname show						% file name
      grestore
    } bind def

% Function printfooter: prints page footer.
/printfooter
    { upperx 0 get sheetnumbery moveto
      footerfont setfont
      fname show
    } bind def

% Function printborder: prints border page.
/printborder 
    { upperx sheetside get uppery moveto
      gsave					% print the four sides
        pagewidth 0 rlineto			% of the square
        0 pageheight neg rlineto
        pagewidth neg 0 rlineto
        closepath stroke
      grestore
      noheader not
         { 0 headersize neg rmoveto pagewidth 0 rlineto stroke }
      if
    } bind def

% Punch Marker
/punchmark {
  gsave
    newpath punchx punchy moveto
    punchx 2 add punchy -0.5 add lineto
    punchx 2 add punchy 0.5 add lineto
    punchx punchy lineto
    closepath
    0 setgray .8 setlinewidth stroke
  grestore
  } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function bs: go back one character width to emulate BS
/bs { backspacewidth neg 0 rmoveto } bind def

% Function s: print a source string
/s  { fontarray fonttype get setfont
      show
    } bind def

% Function ks: print a kanji source string
/ks { kfontarray fonttype get setfont
      KanjiRomanDiffHalf 0 rmoveto
      KanjiRomanDiff 0 3 -1 roll ashow
      KanjiRomanDiffHalf neg 0 rmoveto
    } def

% Function bl: beginning of line
/bl { gsave } bind def

% Function nl: newline
/nl {
      grestore
      0 bodyfontsize 1.1 mul neg rmoveto
    } bind def

% Function cr: carriage return
/cr { grestore } bind def

% Function hlr: half-line up
/hlr { 0 bodyfontsize 0.55 mul rmoveto } bind def

% Function hlr: half-line down
/hlf { 0 bodyfontsize 0.55 mul neg rmoveto } bind def

% Function hlr: half-character backward
/hcr { backspacewidth 2 div neg 0 rmoveto } bind def

% Function hlr: half-character forward
/hcf { backspacewidth 2 div 0 rmoveto } bind def

/R { /fonttype 0 def } bind def
/B { /fonttype 1 def } bind def
/I { /fonttype 2 def } bind def
R
/docsave save def
startdoc
%%EndProlog

(Defender_GSRwithC.java) newfile
/sheet 1 def
%%Page: 1 1
1 startpage
bl ( ) s (// ) s kanji_init (%3!<%A$+$i$N;X<\($r$&$1$k) ks (Defender_GSR.java) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (package brainP;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (import genericP.*;) s cr bl ( ) s nl
bl ( ) s (// import brainP.*;) s cr bl ( ) s nl
bl ( ) s (import playerP.*;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/********************************************************/) s cr bl ( ) s nl
bl ( ) s (/*         Defender_GSR    DF_G ) s (%\(!<%8%'%s%H) ks (with coach  */) s cr bl ( ) s nl
bl ( ) s (/********************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (public class Defender_GSRwithC extends Defender_GSR{) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  //add 0801 for freekick ) s cr bl ( ) s nl
bl ( ) s (  int countForCoachSaying = -1;) s cr bl ( ) s nl
bl ( ) s (  protected final int COACH_WAITING_TIME = 10;  ) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  int myLevelForCoach = 0;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public Defender_GSRwithC\(Player p\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    super\(p\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void playOn\(\){) s cr bl ( ) s nl
bl ( ) s (      ) s cr bl ( ) s nl
bl ( ) s (      myLevelForCoach = 0;) s cr bl ( ) s nl
bl ( ) s (      super.playOn\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s (  public void ourFreeKick\(\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    //) s cr bl ( ) s nl
bl ( ) s (    //) s (%3!<%A$,;X<\($9$k) ks (,) s ($7$J$$$K4X78$J$$=i4|2==hM}) ks cr bl ( ) s nl
bl ( ) s (    //\() s ($^$A$,$C$F$$$k$+$b$7$l$J$$$G$9) ks (\)) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    backPoint=true;) s cr bl ( ) s nl
bl ( ) s (    goalieKick = 3;) s cr bl ( ) s nl
bl ( ) s (    goalieFreeKick = true;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    turnNumber++;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    //System.out.println\("level = "+myLevelForCoach\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    switch\(myLevelForCoach\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      case -1:) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          //) s (%3!<%A$+$i$N;X<\($,$J$+$C$?) ks (    ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          ourFreeKickNoCoach\(\);   ) s cr bl ( ) s nl
bl ( ) s (          break;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      case 0: ) s cr bl ( ) s nl
bl ( ) s (          ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl

endpage
2 startpage
bl ( ) s (          //FreeKick) s ($G$O$8$a$F$3$N%a%=%C%I$K$d$C$F$-$?) ks cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          myLevelForCoach = 1;) s cr bl ( ) s nl
bl ( ) s (          ) s cr bl ( ) s nl
bl ( ) s (          countForCoachSaying = COACH_WAITING_TIME;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          break;) s cr bl ( ) s nl
bl ( ) s (          ) s cr bl ( ) s nl
bl ( ) s (      case 1:) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          //) s (%3!<%A$+$i;X<\($rBT$C$F$$$k>uBV) ks cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          countForCoachSaying--;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          if \(super.infoManager.hasCoachGKFreekickPos\(\)\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (              //) s (;X<\($,$"$C$?) ks cr bl ( ) s nl
bl ( ) s (              myLevelForCoach = 2;) s cr bl ( ) s nl
bl ( ) s (              super.infoManager.setCoachPosGKFreeKickFlag\(Generic.NS_FALSE\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (              //receiveFreekickInformation\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          }else if\(countForCoachSaying == 0\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (              //) s (;~4V@Z$l!#<+$iH=CG$9$k) ks cr bl ( ) s nl
bl ( ) s (              myLevelForCoach = -1;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s (          break;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      case 2:) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          //) s (;X<\($5$l$?0LCV$K0\\F0$9$k) ks cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          ) s cr bl ( ) s nl
bl ( ) s (          super.player.move\(super.infoManager.getCoachGKFreekickMyPosX\(\),) s cr bl ( ) s nl
bl ( ) s (                            super.infoManager.getCoachGKFreekickMyPosY\(\)\);) s cr bl ( ) s nl
bl ( ) s (          super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (          myLevelForCoach = 3;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          break;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      case 3: myLevelForCoach++; super.player.lookAtBall\(\); break;) s cr bl ( ) s nl
bl ( ) s (      case 4: myLevelForCoach++; super.player.lookAtBall\(\); break;) s cr bl ( ) s nl
bl ( ) s (      case 5: myLevelForCoach++; super.player.lookAtBall\(\); break;) s cr bl ( ) s nl
bl ( ) s (      case 6: myLevelForCoach++; super.player.lookAtBall\(\); break;) s cr bl ( ) s nl
bl ( ) s (      case 7:) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          //) s (;X<\($5$l$?0LCV$K%-%C%/!*) ks cr bl ( ) s nl
bl ( ) s (          //\(player) s ($G$"$kDxEYH=CG$9$k$h$&$KJQ99) ks (\)) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          double mx, my, kx, ky;) s cr bl ( ) s nl
bl ( ) s (          double pow = 100;   //default) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          mx = super.infoManager.getCoachGKFreekickMyPosX\(\);) s cr bl ( ) s nl
bl ( ) s (          my = super.infoManager.getCoachGKFreekickMyPosY\(\);) s cr bl ( ) s nl
bl ( ) s (          kx = super.infoManager.getCoachGKFreekickPosX\(\);) s cr bl ( ) s nl
bl ( ) s (          ky = super.infoManager.getCoachGKFreekickPosY\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          System.out.println\(mx+"\\t"+my+"\\t"+kx+"\\t"+ky\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl

endpage
%%Page: 2 2
3 startpage
bl ( ) s (          NSobject openDirNS = new NSobject\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //Y) s kanji_init (<4A}8:$NJ}8~$,0lHL$N%0%i%U$H$O0[$J$k$3$H$KCm0U!*) ks cr bl ( ) s nl
bl ( ) s (          double dir = Math.atan2\(-ky+my, kx-mx\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          double dist = Generic.DIST\(mx, my, kx, ky\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          NSobject opendir;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          super.infoManager.getDirOfOpenSpace\(dir, 25, dist, 2, openDirNS\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          double actKX = super.infoManager.getX\(\) + dist * ) s cr bl ( ) s nl
bl ( ) s (              Math.cos\(Generic.digToRad\(openDirNS.getNS\(\)\)\); ) s cr bl ( ) s nl
bl ( ) s (          double actKY = super.infoManager.getY\(\) + dist) s cr bl ( ) s nl
bl ( ) s (              * Math.sin\(Generic.digToRad\(openDirNS.getNS\(\)\)\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          System.out.println\(dir+"\\t"+actKX+"\\t"+actKY\);) s cr bl ( ) s nl
bl ( ) s (          //System.out.println\(openDirNS\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          if\(dist <= 5\){) s cr bl ( ) s nl
bl ( ) s (              pow = 30;  //) s ($3$NCM$OE,Ev$G$9) ks cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          super.player.shot\(actKX, actKY, pow\);) s cr bl ( ) s nl
bl ( ) s (          super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          /*) s cr bl ( ) s nl
bl ( ) s (          super.player.shot\(kx, ky, 100\);         ) s cr bl ( ) s nl
bl ( ) s (          */) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          myLevelForCoach = 0;) s cr bl ( ) s nl
bl ( ) s (          super.infoManager.setCoachPosGKFreeKickFlag\(Generic.NS_FALSE\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s (          //) s (@oN,%j%l!<$NItJ,) ks cr bl ( ) s nl
bl ( ) s (          //) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          Point oppXY = new Point\(\);  // Point! recX, recY) s cr bl ( ) s nl
bl ( ) s (          Point recXY = new Point\(kx, ky\);  // Point! recX, recY) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          boolean sayStrategy = Generic.NS_FALSE;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          super.infoManager.getPosOfOpponentsForward\(oppXY\);) s cr bl ( ) s nl
bl ( ) s (          if\(oppXY.getPointX\(\) < - Generic.FIELD_X_WIDTH * 0.25\){ ) s cr bl ( ) s nl
bl ( ) s (              // ) s (E\() ks (FW) s ($,%U%#!<%k%I) ks (1/4) s (0J>e96$a$F$$$k>l9g) ks (,) s (%\\!<%k%/%j%"Ds0F) ks cr bl ( ) s nl
bl ( ) s (              super.infoManager.setSelfStrategy\("ballClear","plan"\);) s cr bl ( ) s nl
bl ( ) s (              sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          super.infoManager.getPosOfOpponentsForward\(oppXY\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          if\(recXY.getPointX\(\) > oppXY.getPointY\(\)\){) s cr bl ( ) s nl
bl ( ) s (              //  ) s (%Q%9Aj<j$,E\() ks (FW) s ($h$jA0J}$K$$$k>l9g) ks (,) s (%+%&%s%?!<Ds0F) ks cr bl ( ) s nl
bl ( ) s (              super.infoManager.setSelfStrategy\("counter","plan"\);) s cr bl ( ) s nl
bl ( ) s (              sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s ($H$j$"$\($:) ks (,) s (%\\!<%k$NItJ,) ks cr bl ( ) s nl
bl ( ) s (          StringBuffer str = new StringBuffer\("\("\);  // sprintf!!) s cr bl ( ) s nl
bl ( ) s (          str.append\(super.infoManager.getBallString\(\)\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          if\(sayStrategy\){) s cr bl ( ) s nl
bl ( ) s (              str.append\(" "\);) s cr bl ( ) s nl
bl ( ) s (              //) s (<+J,$N@oN,$r%V%m!<%I%-%c%9%H) ks cr bl ( ) s nl
bl ( ) s (              str.append\(super.infoManager.getStrategyString\(\)\);) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl

endpage
4 startpage
bl ( ) s cr bl ( ) s nl
bl ( ) s (          str.append\("\)"\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          //) s (%P%C%U%!$K$*$/$k) ks cr bl ( ) s nl
bl ( ) s (          super.sayBuff = str.toString\(\); ) s cr bl ( ) s nl
bl ( ) s (          super.player.say\(super.sayBuff\);    ) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (          break;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void ourFreeKickNoCoach\(\){) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (   //) s cr bl ( ) s nl
bl ( ) s (   //FreeKick) s (;~$N=i4|2=) ks cr bl ( ) s nl
bl ( ) s (   //) s cr bl ( ) s nl
bl ( ) s (    boolean sayBallString = Generic.NS_FALSE;) s cr bl ( ) s nl
bl ( ) s (    boolean sayStrategy = Generic.NS_FALSE;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\); ) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    double kickMargin = 0.4;       // ) s (%-%C%/$N@:EY8~>eMQ) ks (,) s (CM$OE,Ev) ks (\(0.35) s (0J>e) ks (\)     ) s cr bl ( ) s nl
bl ( ) s (    // System.out.println\("BodyFace " + super.infoManager.getBodyFaceDir\(\)\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    /*) s cr bl ( ) s nl
bl ( ) s (      FreeKick ) s ($NN.$l) ks cr bl ( ) s nl
bl ( ) s (       Level Action) s cr bl ( ) s nl
bl ( ) s (         1.   move ) s ($r9T$&) ks cr bl ( ) s nl
bl ( ) s (         3.   ) s (=3$kJ}8~$rC5$9) ks (A\() s (:#$O%Q%9) ks (\)) s cr bl ( ) s nl
bl ( ) s (         4.   ) s (=3$kJ}8~$rC5$9) ks (B\() s (:#$O%Q%9) ks (\)) s cr bl ( ) s nl
bl ( ) s (         5.   ) s (%\\!<%k$K6a$E$/) ks cr bl ( ) s nl
bl ( ) s (         6.   ) s (%\\!<%k$r=3$k) ks cr bl ( ) s nl
bl ( ) s (    */) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if \(myLevel == 0\){) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.onThePos\(-42,12\) || ) s cr bl ( ) s nl
bl ( ) s (           super.infoManager.onThePos\(-42,-12\)\){) s cr bl ( ) s nl
bl ( ) s (        // ) s (=jDj$N0LCV$K$$$k$J$i) ks cr bl ( ) s nl
bl ( ) s (        myLevel++;) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    else if \(myLevel == 1\){) s cr bl ( ) s nl
bl ( ) s (      // System.out.println\("BodyFace " + super.infoManager.getBodyFaceDir\(\)\);) s cr bl ( ) s nl
bl ( ) s (      if\(Math.abs\(super.infoManager.getBodyFaceDir\(\)\) < 5 \){) s cr bl ( ) s nl
bl ( ) s (        // ) s (A0$r$A$c$s$H8+$F$$$k$J$i) ks cr bl ( ) s nl
bl ( ) s (        //myLevel=6;    ) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      myLevel=6;) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    else if \(myLevel == 5\){) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.getBallDist\(\) < kickMargin\){) s cr bl ( ) s nl
bl ( ) s (        myLevel++;) s cr bl ( ) s nl
bl ( ) s (      }      ) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (    if\(myLevel == 0\){) s cr bl ( ) s nl
bl ( ) s (      // ) s ($^$:<+J,$N0LCV$r9g$o$9!%) ks cr bl ( ) s nl
bl ( ) s (      ) s cr bl ( ) s nl
bl ( ) s (      if \(ballCatchAngle > 0\){) s cr bl ( ) s nl
bl ( ) s (        // ) s (%\\!<%k$,2<$+$iHt$s$G$-$?!%>/$J$/$F$b2<$K$OE\($,$$$k$N$G) ks cr bl ( ) s nl
bl ( ) s (        super.player.move\(-42,-12\);) s cr bl ( ) s nl
bl ( ) s (        super.player.lookAtBall\(\);) s cr bl ( ) s nl

endpage
%%Page: 3 3
5 startpage
bl ( ) s (        // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTime\(\)) s nl
bl ( ) s ( + " " + super.infoManager.getMyUnum\(\) + " // Level 0-1"\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      else{) s cr bl ( ) s nl
bl ( ) s (        super.player.move\(-42,12\);) s cr bl ( ) s nl
bl ( ) s (        super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (        // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTime\(\)) s nl
bl ( ) s ( + " " + super.infoManager.getMyUnum\(\) + " // Level 0-2"\); ) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (    if \(myLevel == 1\){) s cr bl ( ) s nl
bl ( ) s (      super.player.turn\(30\);) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (      // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTime\(\) +) s nl
bl ( ) s ( " " + super.infoManager.getMyUnum\(\) + " // Level 1"\); ) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  ) s cr bl ( ) s nl
bl ( ) s (  if \(myLevel == 6\){) s cr bl ( ) s nl
bl ( ) s (    if\(this.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (        double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (        double ballY = super.infoManager.getBallY\(\);) s cr bl ( ) s nl
bl ( ) s (        ) s cr bl ( ) s nl
bl ( ) s (        // kick ) s kanji_init ($NJ}8~Ey$r7h$a$k) ks cr bl ( ) s nl
bl ( ) s (        NSobject openDirNS = new NSobject\(\);  // NS object! openDir) s cr bl ( ) s nl
bl ( ) s (        Point recXY = new Point\(\);  // Point! recX, recY) s cr bl ( ) s nl
bl ( ) s (        Point oppXY = new Point\(\);  // Point! recX, recY) s cr bl ( ) s nl
bl ( ) s (        ) s cr bl ( ) s nl
bl ( ) s (        super.infoManager.getPosOfOpponentsForward\(oppXY\);) s cr bl ( ) s nl
bl ( ) s (        if\(oppXY.getPointX\(\) < - Generic.FIELD_X_WIDTH * 0.25\){ ) s cr bl ( ) s nl
bl ( ) s (          // ) s (E\() ks (FW) s ($,%U%#!<%k%I) ks (1/4) s (0J>e96$a$F$$$k>l9g) ks (,) s (%\\!<%k%/%j%"Ds0F) ks cr bl ( ) s nl
bl ( ) s (          super.infoManager.setSelfStrategy\("ballClear","plan"\);) s cr bl ( ) s nl
bl ( ) s (          sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        }) s cr bl ( ) s nl
bl ( ) s (        ) s cr bl ( ) s nl
bl ( ) s (        double value = super.infoManager.getPosOfReceiver\(super.infoManager.getBodyFa) s nl
bl ( ) s (ceDir\(\),45,35,recXY,10\);) s cr bl ( ) s nl
bl ( ) s (        ) s cr bl ( ) s nl
bl ( ) s (        if \(value < sairyo\){) s cr bl ( ) s nl
bl ( ) s (          sairyo = value;) s cr bl ( ) s nl
bl ( ) s (          Sairyo = recXY;) s cr bl ( ) s nl
bl ( ) s (        }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (        if \(turnNumber > 13\){) s cr bl ( ) s nl
bl ( ) s (          if\(sairyo < 1.5\){  //  ) s ($9$3$7%7%S%"$K$7$F$_$?) ks (\(1.7 -> 1.5\)) s cr bl ( ) s nl
bl ( ) s (            super.infoManager.getPosOfOpponentsForward\(oppXY\);) s cr bl ( ) s nl
bl ( ) s (            if\(recXY.getPointX\(\) > oppXY.getPointY\(\)\){) s cr bl ( ) s nl
bl ( ) s (              //  ) s (%Q%9Aj<j$,E\() ks (FW) s ($h$jA0J}$K$$$k>l9g) ks (,) s (%+%&%s%?!<Ds0F) ks cr bl ( ) s nl
bl ( ) s (              super.infoManager.setSelfStrategy\("counter","plan"\);) s cr bl ( ) s nl
bl ( ) s (              sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (            }) s cr bl ( ) s nl
bl ( ) s (            super.player.shot\(recXY.getPointX\(\),recXY.getPointY\(\),100\);) s cr bl ( ) s nl
bl ( ) s (            // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTi) s nl
bl ( ) s (me\(\) + " " + super.infoManager.getMyUnum\(\) + " // ) s (8+J}$K%Q%9$r=3$k) ks ("\);) s cr bl ( ) s nl
bl ( ) s (            sayBallString = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s (          else {) s cr bl ( ) s nl
bl ( ) s (            //  ) s (%Q%9Aj<j$d%*!<%W%s%9%Z!<%9$,$J$$$H$-) ks (.) s (%\\!<%k%/%j%"Ds0F) ks cr bl ( ) s nl
bl ( ) s (            super.infoManager.setSelfStrategy\("ballClear","plan"\);) s cr bl ( ) s nl
bl ( ) s (            sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (            value = super.infoManager.getDirOfOpenSpace\(0,70,25,2,openDirNS\);) s cr bl ( ) s nl
bl ( ) s (            super.player.shot\(super.infoManager.getX\(\) + 30) s cr bl ( ) s nl
bl ( ) s (                              * Math.cos\(Generic.digToRad\(openDirNS.getNS\(\)\)\),) s cr bl ( ) s nl
bl ( ) s (                              super.infoManager.getY\(\) + 30) s cr bl ( ) s nl
bl ( ) s (                              * Math.sin\(Generic.digToRad\(openDirNS.getNS\(\)\)\),100\);) s cr bl ( ) s nl
bl ( ) s (            //  ) s ($H$K$+$/A0$K6/$/=3$l!*) ks cr bl ( ) s nl

endpage
6 startpage
bl ( ) s (            // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTi) s nl
bl ( ) s (me\(\) + " " + super.infoManager.getMyUnum\(\) + " // ) s ($H$K$+$/A0$K6/$/=3$k) ks ("\);) s cr bl ( ) s nl
bl ( ) s (            sayBallString = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (          }) s cr bl ( ) s nl
bl ( ) s (        }) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    else {) s cr bl ( ) s nl
bl ( ) s (      // ) s (%\\!<%k>pJs$,$J$$$N$J$i%\\!<%k$rC5$9) ks cr bl ( ) s nl
bl ( ) s (      this.player.turn\(this.infoManager.getMoment\(30\)\);) s cr bl ( ) s nl
bl ( ) s (      // System.out.println\("#Debug# Time Unum :" + super.infoManager.getBodyTime\(\) +) s nl
bl ( ) s ( " " + super.infoManager.getMyUnum\(\) + " // ball) s ($rC5$9) ks ("\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (  //  ) s (<+J,$N;}$D@oN,$H%\\!<%k>pJs$rN.$9) ks cr bl ( ) s nl
bl ( ) s (  if\(sayBallString || sayStrategy\){) s cr bl ( ) s nl
bl ( ) s (      StringBuffer str = new StringBuffer\("\("\);  // sprintf!!) s cr bl ( ) s nl
bl ( ) s (      ) s cr bl ( ) s nl
bl ( ) s (      //  ) s (%\\!<%k>pJs$O) ks (shot) s ($N8e$N$_N.$9) ks cr bl ( ) s nl
bl ( ) s (      if\(sayBallString\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(super.infoManager.getBallString\(\)\);) s cr bl ( ) s nl
bl ( ) s (      if\(sayBallString && sayStrategy\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(" "\);) s cr bl ( ) s nl
bl ( ) s (      //  ) s (<+J,$N@oN,$r%V%m!<%I%-%c%9%H) ks cr bl ( ) s nl
bl ( ) s (      if\(sayStrategy\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(super.infoManager.getStrategyString\(\)\);) s cr bl ( ) s nl
bl ( ) s (      ) s cr bl ( ) s nl
bl ( ) s (      str.append\("\)"\);) s cr bl ( ) s nl
bl ( ) s (      ) s cr bl ( ) s nl
bl ( ) s (      super.sayBuff = str.toString\(\); ) s cr bl ( ) s nl
bl ( ) s (      super.player.say\(super.sayBuff\);    ) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    ) s cr bl ( ) s nl
bl ( ) s (  /*) s cr bl ( ) s nl
bl ( ) s (    System.out.println\("\(" + super.player.getUniformNum\(\) + "\) strategy : ") s cr bl ( ) s nl
bl ( ) s (    + super.infoManager.getStrategyString\(\)\);             ) s cr bl ( ) s nl
bl ( ) s (    */) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s (  ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s (  ) s cr bl ( ) s nl
bl ( ) s (  public void ourGoalKick\(\){) s cr bl ( ) s nl
bl ( ) s (    boolean sayBallString = Generic.NS_FALSE;) s cr bl ( ) s nl
bl ( ) s (    boolean sayStrategy = Generic.NS_FALSE;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s (    Point oppXY = new Point\(\);  // Point! recX, recY) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    super.infoManager.getPosOfOpponentsForward\(oppXY\);) s cr bl ( ) s nl
bl ( ) s (    if\(oppXY.getPointX\(\) < - Generic.FIELD_X_WIDTH * 0.25\){ ) s cr bl ( ) s nl
bl ( ) s (      // ) s (E\() ks (FW) s ($,%U%#!<%k%I) ks (1/4) s (0J>e96$a$F$$$k>l9g) ks (,) s (%\\!<%k%/%j%"Ds0F) ks cr bl ( ) s nl
bl ( ) s (      super.infoManager.setSelfStrategy\("ballClear","plan"\);) s cr bl ( ) s nl
bl ( ) s (      sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(!super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    else if\(super.infoManager.isKickable2\(\)\){ //  ) s (%\\!<%k$r;}$C$F$$$k) ks cr bl ( ) s nl
bl ( ) s (      NSobject openDirNS = new NSobject\(\);  // NS object! openDir) s cr bl ( ) s nl
bl ( ) s (      Point recXY = new Point\(\);  // Point! recX, recY) s cr bl ( ) s nl

endpage
%%Page: 4 4
7 startpage
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.getPosOfReceiver\(0,30,35,recXY\) < 1.5\){) s cr bl ( ) s nl
bl ( ) s (                                        //  ) s kanji_init ($9$3$7%7%S%"$K$7$F$_$?) ks (\(1.7 -> 1.5\)) s cr bl ( ) s nl
bl ( ) s (        if\(recXY.getPointX\(\) > oppXY.getPointX\(\)\){) s cr bl ( ) s nl
bl ( ) s (          //  ) s (%Q%9Aj<j$,E\() ks (FW) s ($h$jA0J}$K$$$k>l9g) ks (,) s (%+%&%s%?!<Ds0F) ks cr bl ( ) s nl
bl ( ) s (          super.infoManager.setSelfStrategy\("counter","plan"\);) s cr bl ( ) s nl
bl ( ) s (          sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (        super.player.shot\(recXY.getPointX\(\),recXY.getPointY\(\),100\);) s cr bl ( ) s nl
bl ( ) s (        sayBallString = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        this.lastGoalKickTime = super.infoManager.getBodyTime\(\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      else if\(super.infoManager.getDirOfOpenSpace\(0,30,25,2,openDirNS\) < 1.7\){) s cr bl ( ) s nl
bl ( ) s (        super.player.shot\(super.infoManager.getX\(\) + 25 *) s cr bl ( ) s nl
bl ( ) s (                          Math.cos\(Generic.digToRad\(openDirNS.getNS\(\)\)\),) s cr bl ( ) s nl
bl ( ) s (                          super.infoManager.getY\(\) + 25 * ) s cr bl ( ) s nl
bl ( ) s (                          Math.sin\(Generic.digToRad\(openDirNS.getNS\(\)\)\),100\);) s cr bl ( ) s nl
bl ( ) s (        sayBallString = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        this.lastGoalKickTime = super.infoManager.getBodyTime\(\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      else {) s cr bl ( ) s nl
bl ( ) s (        //  ) s (%Q%9Aj<j$d%*!<%W%s%9%Z!<%9$,$J$$$H$-) ks (,) s (%\\!<%k%/%j%"Ds0F) ks cr bl ( ) s nl
bl ( ) s (        super.infoManager.setSelfStrategy\("ballClear","plan"\);) s cr bl ( ) s nl
bl ( ) s (        sayStrategy = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        super.infoManager.getDirOfOpenSpace\(0,45,25,2,openDirNS\);) s cr bl ( ) s nl
bl ( ) s (        super.player.shot\(super.infoManager.getX\(\) + 30 *) s cr bl ( ) s nl
bl ( ) s (                          Math.cos\(Generic.digToRad\(openDirNS.getNS\(\)\)\),) s cr bl ( ) s nl
bl ( ) s (                          super.infoManager.getY\(\) + 30 * ) s cr bl ( ) s nl
bl ( ) s (                          Math.sin\(Generic.digToRad\(openDirNS.getNS\(\)\)\),100\);) s cr bl ( ) s nl
bl ( ) s (                                                   //  ) s ($H$K$+$/A0$K6/$/=3$l!*) ks cr bl ( ) s nl
bl ( ) s (        sayBallString = Generic.NS_TRUE;) s cr bl ( ) s nl
bl ( ) s (        this.lastGoalKickTime = super.infoManager.getBodyTime\(\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (    else {) s cr bl ( ) s nl
bl ( ) s (      super.player.chaseBall\(dashPower\);) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    //  ) s (<+J,$N;}$D@oN,$H%\\!<%k>pJs$rN.$9) ks cr bl ( ) s nl
bl ( ) s (    if\(sayBallString || sayStrategy\){) s cr bl ( ) s nl
bl ( ) s (      StringBuffer str = new StringBuffer\("\("\);  // sprintf!!) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      //  ) s (%\\!<%k>pJs$O) ks (shot) s ($N8e$N$_N.$9) ks cr bl ( ) s nl
bl ( ) s (      if\(sayBallString\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(super.infoManager.getBallString\(\)\);) s cr bl ( ) s nl
bl ( ) s (      if\(sayBallString && sayStrategy\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(" "\);) s cr bl ( ) s nl
bl ( ) s (      //  ) s (<+J,$N@oN,$r%V%m!<%I%-%c%9%H) ks cr bl ( ) s nl
bl ( ) s (      if\(sayStrategy\)) s cr bl ( ) s nl
bl ( ) s (        str.append\(super.infoManager.getStrategyString\(\)\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      str.append\("\)"\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      super.sayBuff = str.toString\(\); ) s cr bl ( ) s nl
bl ( ) s (      super.player.say\(super.sayBuff\);    ) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (//) s cr bl ( ) s nl
bl ( ) s (/*) s cr bl ( ) s nl
bl ( ) s (System.out.println\("\(" + super.player.getUniformNum\(\) + "\) strategy : ") s cr bl ( ) s nl
bl ( ) s (                         + super.infoManager.getStrategyString\(\)\);             ) s cr bl ( ) s nl
bl ( ) s (*/) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl

endpage
8 startpage
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void ourCornerKick\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (       dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void ourKickIn\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsFreeKick\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl

endpage
%%Page: 5 5
9 startpage
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsGoalKick\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsCornerKick\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsKickIn\(\){) s cr bl ( ) s nl
bl ( ) s (    double dashPower = Generic.STAMINA_INC_MAX;) s cr bl ( ) s nl
bl ( ) s (    double pointDiff = super.infoManager.getOurPoint\(\)) s cr bl ( ) s nl
bl ( ) s (                       - super.infoManager.getOpponentsPoint\(\);) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(pointDiff < 0\)) s cr bl ( ) s nl
bl ( ) s (      dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (      double ballX = super.infoManager.getBallX\(\);) s cr bl ( ) s nl

endpage
10 startpage
bl ( ) s (      if\(ballX < -15\)) s cr bl ( ) s nl
bl ( ) s (        dashPower = Generic.STAMINA_INC_MAX * 2;) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (      if\(!super.infoManager.onThePos\(super.stdX,super.stdY\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.goToThePos\(super.stdX,super.stdY,dashPower\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (      super.player.lookAtBall\(\);) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsKickOff\(\){) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.onThePos\(super.startX,super.startY\)\){) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(super.infoManager.getBallDir\(\)\);) s cr bl ( ) s nl
bl ( ) s (      } else {) s cr bl ( ) s nl
bl ( ) s (          super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (        }) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.move\(super.startX,super.startY\);) s cr bl ( ) s nl
bl ( ) s (        super.player.changeView\("normal","high"\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void ourGoal\(\){) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.onThePos\(super.startX,super.startY\)\){) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(super.infoManager.getBallDir\(\)\);) s cr bl ( ) s nl
bl ( ) s (      } else {) s cr bl ( ) s nl
bl ( ) s (         super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.move\(super.startX,super.startY\);) s cr bl ( ) s nl
bl ( ) s (        super.player.changeView\("normal","high"\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (  public void opponentsGoal\(\){) s cr bl ( ) s nl
bl ( ) s (    if\(super.infoManager.onThePos\(super.startX,super.startY\)\){) s cr bl ( ) s nl
bl ( ) s (      if\(super.infoManager.hasBallInfo\(\)\){) s cr bl ( ) s nl
bl ( ) s (        super.player.turn\(super.infoManager.getBallDir\(\)\);) s cr bl ( ) s nl
bl ( ) s (      } else {) s cr bl ( ) s nl
bl ( ) s (          super.player.turn\(45\);) s cr bl ( ) s nl
bl ( ) s (      }) s cr bl ( ) s nl
bl ( ) s (    } else {) s cr bl ( ) s nl
bl ( ) s (        super.player.move\(super.startX,super.startY\);) s cr bl ( ) s nl
bl ( ) s (        super.player.changeView\("normal","high"\);) s cr bl ( ) s nl
bl ( ) s (    }) s cr bl ( ) s nl
bl ( ) s (  }) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (/***************************************************************************/) s cr bl ( ) s nl
bl ( ) s cr bl ( ) s nl
bl ( ) s (}) s cr bl ( ) s nl

endpage

cleanup
%%Trailer
docsave restore end
