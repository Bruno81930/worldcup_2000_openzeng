%!PS-Adobe-1.0
%%Title: BodyInfoParser.java
%%Creator: 
%%CreationDate: Thu Dec  9  3:38:12 Japan 1999
%%Pages: (atend)
%%PageOrder: Ascend
%%DocumentPaperSizes: A4
%%Orientation: Landscape
%%EndComments

/$a2psdict 100 dict def
$a2psdict begin
% Initialize page description variables.
/inch {72 mul} bind def
%% SelectTray
statusdict /a4tray known { statusdict begin a4tray end } if
/landscape true def
/twinpage true def
/sheetheight 11.64 inch def
/sheetwidth 8.27 inch def
/lmargin 1.2 inch def
/smargin 1.2 inch def
/paper_adjust 0.05 inch def
/noborder false def
/noheader false def
/headersize 0.22 inch def
/nofooter false def
/nopunchmark true def
/bodyfontsize 6.6 def
/kanjiAsciiRatio 1 def
/lines 66 def
/columns 86 def
/date (Dec 9 1999 3:38) def
/doasciimag false def
%!  PostScript Source Code
%
%  File: imag:/users/local/a2ps/header.ps
%  Created: Tue Nov 29 12:14:02 1988 by miguel@imag (Miguel Santana)
%  Version: 2.0
%  Description: PostScript prolog for a2ps ascii to PostScript program.
%
%  Edit History:
%  - Original version by evan@csli (Evan Kirshenbaum).
%  - Modified by miguel@imag to:
%    1) Correct an overflow bug when printing page number 10 (operator
%	cvs).
%    2) Define two other variables (sheetwidth, sheetheight) describing
%	the physical page (by default A4 format).
%    3) Minor changes (reorganization, comments, etc).
%  - Modified by tullemans@apolloway.prl.philips.nl
%    1) Correct stack overflows with regard to operators cvs and copy.
%       The resulting substrings where in some cases not popped off
%       the stack, what can result in a stack overflow.
%    2) Replaced copypage and erasepage by showpage. Page througput
%       degrades severely (see red book page 140) on our ps-printer
%       after printing sheet 16 (i.e. page 8) of a file which was
%       actually bigger. For this purpose the definitions of startdoc
%       and startpage are changed.
%  - Modified by Tim Clark <T.Clark@uk.ac.warwick> to:
%    1) Print one page per sheet (portrait) as an option.
%    2) Reduce size of file name heading, if it's too big.
%    3) Save and restore PostScript state at begining/end. It now uses
%	conventional %%Page %%Trailer markers.
%    4) Print one wide page per sheet in landscape mode as an option.
%  - Modified by miguel@imag.fr to
%    1) Add new option to print n copies of a file.
%    2) Add new option to suppress heading printing.
%    3) Add new option to suppress page surrounding border printing.
%    4) Add new option to change font size. Number of lines and columns
%	are now automatically adjusted, depending on font size and
%	printing mode used.
%    5) Minor changes (best layout, usage message, etc).
%  - Modified by kanazawa@sra.co.jp to:
%    1) Handle Japanese code
%  - Modified by utashiro@sra.co.jp to:
%    1) Fix bug in printing long label
%    2) Handle carriage-return
%    3) Specify kanji-ascii character retio
%    4) Add footer label
%    5) Change filename->fname becuase ghostscript has operator filename
%    6) Support three different font style
%    7) Incorporate B4 paper support and punchmark contributed
%       by Masami Ueno <cabbage@kki.esi.yamanashi.ac.jp>
%

% Copyright (c) 1988, Miguel Santana, miguel@imag.imag.fr
%
% Permission is granted to copy and distribute this file in modified
% or unmodified form, for noncommercial use, provided (a) this copyright
% notice is preserved, (b) no attempt is made to restrict redistribution
% of this file, and (c) this file is not distributed as part of any
% collection whose redistribution is restricted by a compilation copyright.
%


% General macros.
/xdef {exch def} bind def
/getfont {exch findfont exch scalefont} bind def

% Page description variables and inch function are defined by a2ps program.

% Character size for differents fonts.
   landscape
   { /filenamefontsize 12 def }
   { /filenamefontsize 16 def }
ifelse
/datefontsize filenamefontsize 0.8 mul def
/headermargin filenamefontsize 0.25 mul def
/bodymargin bodyfontsize 0.7 mul def

% Font assignment to differents kinds of "objects"
/filenamefontname /Helvetica-Bold def
/stdfilenamefont filenamefontname filenamefontsize getfont def
/datefont /Helvetica datefontsize getfont def
/footerfont /Helvetica-Bold datefontsize getfont def
/mag { doasciimag { [ 1 0 0 asciimagsize 0 0 ] makefont } if } def
/bodynfont /Courier bodyfontsize getfont mag def
/bodybfont /Courier-Bold bodyfontsize getfont mag def
/bodyofont /Courier-BoldOblique bodyfontsize getfont mag def
/fontarray [ bodynfont bodybfont bodyofont ] def
/bodyfont bodynfont def

% Initializing kanji fonts
/kanji_initialized false def
/kanji_init {
   kanji_initialized not
   {
      /bodykfontsize bodyfontsize kanjiAsciiRatio mul def
      /bodyknfont /Ryumin-Light-H bodykfontsize getfont def
      /bodykbfont /GothicBBB-Medium-H bodykfontsize getfont def
      /bodykofont bodykbfont [ 1 0 .2 1 0 0 ] makefont def
      /KanjiRomanDiff 1.2 bodyfontsize mul 1.0 bodykfontsize mul sub def
      /KanjiRomanDiffHalf KanjiRomanDiff 2 div def
      /kfontarray [ bodyknfont bodykbfont bodykofont ] def
      /kanji_initialized true def
   } if
} def

% Backspace width
/backspacewidth
   bodyfont setfont (0) stringwidth pop
   def

% Logical page attributs (a half of a real page or sheet).
/pagewidth
   bodyfont setfont (0) stringwidth pop columns mul bodymargin dup add add
   def
/pageheight
   bodyfontsize 1.1 mul lines mul bodymargin dup add add headersize add
   def

% Coordinates for upper corner of a logical page and for sheet number.
% Coordinates depend on format mode used.
% In twinpage mode, coordinate x of upper corner is not the same for left
% and right pages: upperx is an array of two elements, indexed by sheetside.
/rightmargin smargin 3 div def
/leftmargin smargin 2 mul 3 div def
/topmargin lmargin twinpage {3} {2} ifelse div def
landscape
{  % Landscape format
   /punchx .4 inch def           % for PunchMark
   /punchy sheetwidth 2 div def  % for PunchMark
   /uppery rightmargin pageheight add bodymargin add def
   /sheetnumbery sheetwidth leftmargin pageheight add datefontsize add sub def
   twinpage
   {  % Two logical pages
      /upperx [ topmargin 2 mul			% upperx for left page
		dup topmargin add pagewidth add	% upperx for right page
	      ] def
      /sheetnumberx sheetheight topmargin 2 mul sub def
   }
   {  /upperx [ topmargin dup ] def
      /sheetnumberx sheetheight topmargin sub datefontsize sub def
   }
   ifelse
}
{  % Portrait format
   /punchx .3 inch def
   /punchy sheetheight 2 div def
   /uppery topmargin pageheight add def
   /upperx [ leftmargin dup ] def
   /sheetnumberx sheetwidth rightmargin sub datefontsize sub def
   /sheetnumbery
	 sheetheight
	 topmargin pageheight add datefontsize add headermargin add
      sub
      def
}
ifelse

% Strings used to make easy printing numbers
/pnum 12 string def
/empty 12 string def

% Other initializations.
datefont setfont
/datewidth date stringwidth pop def
/pagenumwidth (Page 999) stringwidth pop def
/filenameroom
         pagewidth
	 filenamefontsize 4 mul datewidth add pagenumwidth add
      sub
   def


% Function startdoc: initializes printer and global variables.
/startdoc
    { /sheetside 0 def			% sheet side that contains current page
      /sheet 1 def			% sheet number
   } bind def

% Function newfile: init file name for each new file.
/newfile
    { cleanup
      /fname xdef
      stdfilenamefont setfont
      /filenamewidth fname stringwidth pop def
      /filenamefont
	 filenamewidth filenameroom gt
	 {
	       filenamefontname
	       filenamefontsize filenameroom mul filenamewidth div
	    getfont
	 }
	 {  stdfilenamefont }
	 ifelse
	 def
    } bind def

% Function printpage: Print a physical page.
/printpage
    { /sheetside 0 def
      twinpage
      {  noborder not
	    { sheetnumber }
	 if
      }
      {  noheader noborder not and
	    { sheetnumber }
	 if
      }
      ifelse
      showpage
%      pagesave restore
      /sheet sheet 1 add def
    } bind def

% Function cleanup: terminates printing, flushing last page if necessary.
/cleanup
    { twinpage sheetside 1 eq and
         { printpage }
      if
    } bind def

%
% Function startpage: prints page header and page border and initializes
% printing of the file lines.  Page number is stored on the top of stack.
/startpage
    { /pagenum exch def
      sheetside 0 eq
	{ % /pagesave save def
	  landscape
	    { sheetwidth 0 inch translate	% new coordinates system origin
	      90 rotate				% landscape format
	      paper_adjust neg 0 translate
	    } if
	} if
      noborder not { printborder } if
      noheader not { printheader } if
      nofooter not { printfooter } if
      nopunchmark not { punchmark } if
	 upperx sheetside get  bodymargin  add
	    uppery
	    bodymargin bodyfontsize add  noheader {0} {headersize} ifelse  add
	 sub
      moveto
    } bind def

% Function printheader: prints page header.
/printheader
    { upperx sheetside get  uppery headersize sub 1 add  moveto
      datefont setfont
      gsave
        datefontsize headermargin rmoveto
	date show					% date/hour
      grestore
      gsave
	pagenum pnum cvs pop
	   pagewidth pagenumwidth sub
	   headermargin
	rmoveto
        (Page ) show pnum show				% page number
      grestore
      empty pnum copy pop
      gsave
        filenamefont setfont
	      filenameroom fname stringwidth pop sub 2 div datewidth add
	      filenamefontsize 2 mul
	   add
	   headermargin
	rmoveto
        fname show						% file name
      grestore
    } bind def

% Function printfooter: prints page footer.
/printfooter
    { upperx 0 get sheetnumbery moveto
      footerfont setfont
      fname show
    } bind def

% Function printborder: prints border page.
/printborder
    { upperx sheetside get uppery moveto
      gsave					% print the four sides
        pagewidth 0 rlineto			% of the square
        0 pageheight neg rlineto
        pagewidth neg 0 rlineto
        closepath stroke
      grestore
      noheader not
         { 0 headersize neg rmoveto pagewidth 0 rlineto stroke }
      if
    } bind def

% Punch Marker
/punchmark {
  gsave
    newpath punchx punchy moveto
    punchx 2 add punchy -0.5 add lineto
    punchx 2 add punchy 0.5 add lineto
    punchx punchy lineto
    closepath
    0 setgray .8 setlinewidth stroke
  grestore
  } bind def

%
% Function endpage: adds a sheet number to the page (footnote) and prints
% the formatted page (physical impression). Activated at the end of each
% source page (lines reached or FF character).
/endpage
   { twinpage  sheetside 0 eq  and
        { /sheetside 1 def }
        { printpage }
     ifelse
   } bind def

% Function sheetnumber: prints the sheet number.
/sheetnumber
    { sheetnumberx sheetnumbery moveto
      datefont setfont
      sheet pnum cvs
	 dup stringwidth pop (0) stringwidth pop sub neg 0 rmoveto show
      empty pnum copy pop
    } bind def

% Function bs: go back one character width to emulate BS
/bs { backspacewidth neg 0 rmoveto } bind def

% Function s: print a source string
/s  { fontarray fonttype get setfont
      show
    } bind def

% Function ks: print a kanji source string
/ks { kfontarray fonttype get setfont
      KanjiRomanDiffHalf 0 rmoveto
      KanjiRomanDiff 0 3 -1 roll ashow
      KanjiRomanDiffHalf neg 0 rmoveto
    } def

% Function bl: beginning of line
/bl { gsave } bind def

% Function nl: newline
/nl {
      grestore
      0 bodyfontsize 1.1 mul neg rmoveto
    } bind def

% Function cr: carriage return
/cr { grestore } bind def

% Function hlr: half-line up
/hlr { 0 bodyfontsize 0.55 mul rmoveto } bind def

% Function hlr: half-line down
/hlf { 0 bodyfontsize 0.55 mul neg rmoveto } bind def

% Function hlr: half-character backward
/hcr { backspacewidth 2 div neg 0 rmoveto } bind def

% Function hlr: half-character forward
/hcf { backspacewidth 2 div 0 rmoveto } bind def

/R { /fonttype 0 def } bind def
/B { /fonttype 1 def } bind def
/I { /fonttype 2 def } bind def
R
/docsave save def
startdoc
%%EndProlog

(BodyInfoParser.java) newfile
/sheet 1 def
%%Page: 1 1
1 startpage
bl ( ) s (// BodyInfoParser.java) s nl
bl ( ) s nl
bl ( ) s (package parserP;) s nl
bl ( ) s nl
bl ( ) s (import java.util.*;) s nl
bl ( ) s (import genericP.*;) s nl
bl ( ) s (import objectP.*;) s nl
bl ( ) s (import stokenizerP.*;) s nl
bl ( ) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s (/*         BodyInfoParser  sense_body ) s kanji_init (>pJs$N2r@O) ks (        */) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s nl
bl ( ) s (public class BodyInfoParser{) s nl
bl ( ) s (    String bodyInfo;) s nl
bl ( ) s nl
bl ( ) s (    int time;) s nl
bl ( ) s nl
bl ( ) s (    // ) s (%S%e!<%b!<%I) ks nl
bl ( ) s (    String angleWidth;) s nl
bl ( ) s (    String quality;) s nl
bl ( ) s (    ) s nl
bl ( ) s (    // ) s (%9%?%_%J) ks nl
bl ( ) s (    double stamina;) s nl
bl ( ) s (    double effort;) s nl
bl ( ) s (    ) s nl
bl ( ) s (    double speed;) s nl
bl ( ) s (    double headAngle;) s nl
bl ( ) s nl
bl ( ) s (    // ) s (%+%&%s%?) ks nl
bl ( ) s (    int kickCount;) s nl
bl ( ) s (    int dashCount;) s nl
bl ( ) s (    int turnCount;) s nl
bl ( ) s (    int sayCount;) s nl
bl ( ) s (    int turnNeckCount;) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public BodyInfoParser\(\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){   // ) s (%G%P%C%0MQ) ks nl
bl ( ) s (      System.out.println\("Creating BodyInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public BodyInfoParser\(String bi\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){   // ) s (%G%P%C%0MQ) ks nl
bl ( ) s (      System.out.println\("Creating BodyInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    setInfo\(bi\);) s nl
bl ( ) s (    parseInfo\(\);) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (    ) s nl
bl ( ) s (  public void setInfo\(String bi\){) s nl
bl ( ) s (    this.bodyInfo = bi;) s nl

endpage
2 startpage
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void parseInfo\(\){) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(this.bodyInfo\);) s nl
bl ( ) s (    String token;) s nl
bl ( ) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    if\(!token.equals\("sense_body"\)\){) s nl
bl ( ) s (      System.out.println\("BodyInfoParser::parseFlagInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (      System.out.println\("bodyInfo"\);) s nl
bl ( ) s (      return;) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    this.time = Integer.valueOf\(tokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    // ) s (0l1~>l9gJ,$1$7$F$k$1$IK\\Ev$O7h$a$&$A$G$$$$$O$:) ks nl
bl ( ) s (    while\(tokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (        token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (        STokenizer subTokenizer = new STokenizer\(token\);) s nl
bl ( ) s nl
bl ( ) s (        // ) s ($3$N$"$?$j$OJ8;z$GH=Dj$9$l$P9bB.2==PMh$k$7) ks ( case ) s ($K=PMh$k) ks nl
bl ( ) s (        // ) s ($G$b!"2DFI@-$,Dc$/$J$k$N$G:G8e$N<jCJ$K) ks nl
bl ( ) s (        // ) s (4pK\\E*$K%3%a%s%H$J$7$G$b%W%m%0%i%`$OFI$a$J$1$l$P%@%a) ks nl
bl ( ) s nl
bl ( ) s (    token = subTokenizer.nextSToken\(\);) s nl
bl ( ) s (    if\(token.equals\("view_mode"\)\){) s nl
bl ( ) s (      this.quality = subTokenizer.nextSToken\(\);) s nl
bl ( ) s (      this.angleWidth = subTokenizer.nextSToken\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("stamina"\)\){) s nl
bl ( ) s (      this.stamina = Double.valueOf\(subTokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (      this.effort = Double.valueOf\(subTokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("speed"\)\){) s nl
bl ( ) s (      this.speed = Double.valueOf\(subTokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("head_angle"\)\){) s nl
bl ( ) s (      this.headAngle = Double.valueOf\(subTokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("kick"\)\){) s nl
bl ( ) s (      this.kickCount = Integer.valueOf\(subTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("dash"\)\){) s nl
bl ( ) s (      this.dashCount = Integer.valueOf\(subTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("turn"\)\){) s nl
bl ( ) s (      this.turnCount = Integer.valueOf\(subTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("say"\)\){) s nl
bl ( ) s (      this.sayCount = Integer.valueOf\(subTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("turn_neck"\)\){) s nl
bl ( ) s (      this.turnNeckCount = Integer.valueOf\(subTokenizer.nextSToken\(\)\).) s nl
bl ( ) s (                                                                 intValue\(\);) s nl
bl ( ) s (    } else {) s nl
bl ( ) s nl
bl ( ) s (      /*) s nl
bl ( ) s (      if\(Generic.DEBUG\){   // ) s (%G%P%C%0MQ) ks nl
bl ( ) s (        System.out.println\("BodyInfoParser::parseFlagInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        System.out.println\(token\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (      */) s nl
bl ( ) s nl
bl ( ) s (      return;) s nl

endpage
%%Page: 2 2
3 startpage
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getTime\(\){) s nl
bl ( ) s (    return this.time;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public String getAngleWidth\(\){) s nl
bl ( ) s (    return this.angleWidth;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public String getQuality\(\){) s nl
bl ( ) s (    return this.quality;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public double getStamina\(\){) s nl
bl ( ) s (    return this.stamina;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public double getEffort\(\){) s nl
bl ( ) s (    return this.effort;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public double getSpeed\(\){) s nl
bl ( ) s (    return this.speed;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public double getHeadAngle\(\){) s nl
bl ( ) s (    return this.headAngle;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getKickCount\(\){) s nl
bl ( ) s (    return this.kickCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getDashCount\(\){) s nl
bl ( ) s (    return this.dashCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getTurnCount\(\){) s nl
bl ( ) s (    return this.turnCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl

endpage
4 startpage
bl ( ) s (  public int getSayCount\(\){) s nl
bl ( ) s (    return this.sayCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getTurnNeckCount\(\){) s nl
bl ( ) s (    return this.turnNeckCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void printInfo\(\){) s nl
bl ( ) s (    System.out.println\("************* BodyInfo *************"\);) s nl
bl ( ) s (    System.out.println\("Time : " + this.time\);) s nl
bl ( ) s (    System.out.println\("AngleWidth : " + this.angleWidth\);) s nl
bl ( ) s (    System.out.println\("Quality : " + this.quality\);) s nl
bl ( ) s (    System.out.println\("Stamina : " + this.stamina\);) s nl
bl ( ) s (    System.out.println\("Effort : " + this.effort\);) s nl
bl ( ) s (    System.out.println\("Speed : " + this.speed \);) s nl
bl ( ) s (    System.out.println\("HeadAngle : " + this.headAngle\);) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (}) s nl
bl ( ) s nl
bl ( ) s nl

endpage
(HearInfoParser.java) newfile
/sheet 1 def
%%Page: 1 1
1 startpage
bl ( ) s (// HearInfoParser.java) s nl
bl ( ) s nl
bl ( ) s (package parserP;) s nl
bl ( ) s nl
bl ( ) s (import java.util.*;) s nl
bl ( ) s (import genericP.*;) s nl
bl ( ) s (import objectP.*;) s nl
bl ( ) s (import stokenizerP.*;) s nl
bl ( ) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s (/*        HearInfoParser          ) s kanji_init (D03P>pJs$N2r@O) ks (        */) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s nl
bl ( ) s (public class HearInfoParser implements PlaymodeTable{) s nl
bl ( ) s (  final int FROM_UNKNOWN = 0;) s nl
bl ( ) s (  final int FROM_REFEREE = 1;) s nl
bl ( ) s (  final int FROM_TEAMMATE = 2;) s nl
bl ( ) s nl
bl ( ) s (  String hearInfo;) s nl
bl ( ) s (  String side;) s nl
bl ( ) s (  String teamname;) s nl
bl ( ) s nl
bl ( ) s (  String message;) s nl
bl ( ) s nl
bl ( ) s (  int time;) s nl
bl ( ) s (  int playmode;) s nl
bl ( ) s (  int from;) s nl
bl ( ) s (    ) s nl
bl ( ) s (  int ourPoint,opponentsPoint;) s nl
bl ( ) s (    ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public HearInfoParser\(\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){   // ) s (%G%P%C%0MQ) ks nl
bl ( ) s (      System.out.println\("Creating HearInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    this.ourPoint = this.opponentsPoint = 0;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public HearInfoParser\(String hi,String s,String tname\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){   // ) s (%G%P%C%0MQ) ks nl
bl ( ) s (      System.out.println\("Creating HearInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    this.ourPoint = this.opponentsPoint = 0;) s nl
bl ( ) s nl
bl ( ) s (    setInfo\(hi\);) s nl
bl ( ) s (    setSide\(s\);) s nl
bl ( ) s (    setTeamname\(tname\);) s nl
bl ( ) s nl
bl ( ) s (    parseInfo\(\);) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void setInfo\(String hi\){) s nl
bl ( ) s (    this.hearInfo = hi;) s nl

endpage
2 startpage
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void setSide\(String si\){) s nl
bl ( ) s (    this.side = si;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void setTeamname\(String tname\){) s nl
bl ( ) s (    this.teamname = tname;) s nl
bl ( ) s (  }) s nl
bl ( ) s (   ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void parseInfo\(\){) s nl
bl ( ) s (    String token;) s nl
bl ( ) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(this.hearInfo\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(Generic.DEBUG\){ ) s nl
bl ( ) s (      if\(!token.equals\("hear"\)\){) s nl
bl ( ) s (        System.out.println\("HearInfoParser.parseInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    this.time = Integer.valueOf\(token\).intValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(token.equals\("referee"\)\){) s nl
bl ( ) s (      this.from = FROM_REFEREE;) s nl
bl ( ) s (      token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(token.startsWith\("before_kick_off"\)\){) s nl
bl ( ) s (        this.playmode = PM_BEFORE_KICK_OFF;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("kick_off_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_KICK_OFF;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_KICK_OFF;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("kick_in_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_KICK_IN;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_KICK_IN;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("corner_kick_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_CORNER_KICK;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_CORNER_KICK;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("goal_kick_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_GOAL_KICK;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_GOAL_KICK;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("free_kick_"\)\){) s nl

endpage
%%Page: 2 2
3 startpage
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_FREE_KICK;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_FREE_KICK;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("offside_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_OFFSIDE;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_OFFSIDE;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("play_on"\)\){) s nl
bl ( ) s (        this.playmode = PM_PLAY_ON;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("half_time"\)\){) s nl
bl ( ) s (        this.playmode = PM_HALF_TIME;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("extend"\)\){) s nl
bl ( ) s (        this.playmode = PM_EXTEND;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("foul_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\)) s nl
bl ( ) s (          this.playmode = PM_OUR_FOUL;) s nl
bl ( ) s (        else) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_FOUL;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("goal_"\)\){) s nl
bl ( ) s (        if\(token.endsWith\(this.side\)\){) s nl
bl ( ) s (          this.playmode = PM_OUR_GOAL;) s nl
bl ( ) s (          this.ourPoint = Integer.valueOf\(token.substring\(7,8\)\).intValue\(\);) s nl
bl ( ) s (        }) s nl
bl ( ) s (        else {) s nl
bl ( ) s (          this.playmode = PM_OPPONENTS_GOAL;) s nl
bl ( ) s (          this.opponentsPoint =) s nl
bl ( ) s (                          Integer.valueOf\(token.substring\(7,8\)\).intValue\(\);) s nl
bl ( ) s (        }) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("self"\)\){) s nl
bl ( ) s (      // ) s kanji_init ($H$j$"$\($:<N$F$H$1$P$$$$$+) ks nl
bl ( ) s (    }) s nl
bl ( ) s (    else {) s nl
bl ( ) s (      token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(token.equals\(teamname\)\){) s nl
bl ( ) s (        this.from = FROM_TEAMMATE;) s nl
bl ( ) s (        this.message = tokenizer.nextSToken\(\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getTime\(\){) s nl
bl ( ) s (    return this.time;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getPlaymode\(\){) s nl
bl ( ) s (    return this.playmode;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public boolean fromReferee\(\){) s nl

endpage
4 startpage
bl ( ) s (    if\(this.from == FROM_REFEREE\)) s nl
bl ( ) s (      return Generic.NS_TRUE;) s nl
bl ( ) s (    else) s nl
bl ( ) s (      return Generic.NS_FALSE;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public boolean fromTeammate\(\){) s nl
bl ( ) s (    if\(this.from == FROM_TEAMMATE\)) s nl
bl ( ) s (      return Generic.NS_TRUE;) s nl
bl ( ) s (    else) s nl
bl ( ) s (      return Generic.NS_FALSE;) s nl
bl ( ) s (  }) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public String getMessage\(\){) s nl
bl ( ) s (    return this.message;) s nl
bl ( ) s (  }) s nl
bl ( ) s (    ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getOurPoint\(\){) s nl
bl ( ) s (    return this.ourPoint;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getOpponentsPoint\(\){) s nl
bl ( ) s (    return opponentsPoint;) s nl
bl ( ) s (  }) s nl
bl ( ) s (    ) s nl
bl ( ) s (}) s nl

endpage
(PlaymodeTable.java) newfile
/sheet 1 def
%%Page: 1 1
1 startpage
bl ( ) s (// PlaymodeTable.java) s nl
bl ( ) s nl
bl ( ) s (package parserP;) s nl
bl ( ) s nl
bl ( ) s (public interface PlaymodeTable{) s nl
bl ( ) s (  int PM_BEFORE_KICK_OFF = 0;) s nl
bl ( ) s (  int PM_OUR_KICK_OFF = 1;) s nl
bl ( ) s (  int PM_OPPONENTS_KICK_OFF = 2;) s nl
bl ( ) s (  int PM_OUR_KICK_IN = 3; ) s nl
bl ( ) s (  int PM_OPPONENTS_KICK_IN = 4;) s nl
bl ( ) s (  int PM_OUR_CORNER_KICK = 5;) s nl
bl ( ) s (  int PM_OPPONENTS_CORNER_KICK = 6;) s nl
bl ( ) s (  int PM_OUR_GOAL_KICK = 7;) s nl
bl ( ) s (  int PM_OPPONENTS_GOAL_KICK = 8;) s nl
bl ( ) s (  int PM_OUR_FREE_KICK = 9;) s nl
bl ( ) s (  int PM_OPPONENTS_FREE_KICK = 10;) s nl
bl ( ) s (  int PM_OUR_OFFSIDE = 11;) s nl
bl ( ) s (  int PM_OPPONENTS_OFFSIDE = 12;) s nl
bl ( ) s (  int PM_PLAY_ON = 13;) s nl
bl ( ) s (  int PM_HALF_TIME = 14;) s nl
bl ( ) s (  int PM_TIME_UP = 15;) s nl
bl ( ) s (  int PM_EXTEND = 16;) s nl
bl ( ) s (  int PM_OUR_FOUL = 17;) s nl
bl ( ) s (  int PM_OPPONENTS_FOUL = 18;) s nl
bl ( ) s (  int PM_OUR_GOAL = 19;) s nl
bl ( ) s (  int PM_OPPONENTS_GOAL = 20;) s nl
bl ( ) s (}) s nl

endpage
(SeeInfoParser.java) newfile
/sheet 1 def
%%Page: 1 1
1 startpage
bl ( ) s (// SeeInfoParser.java) s nl
bl ( ) s nl
bl ( ) s (package parserP;) s nl
bl ( ) s nl
bl ( ) s (import java.util.*;) s nl
bl ( ) s (import genericP.*;) s nl
bl ( ) s (import objectP.*;) s nl
bl ( ) s (import stokenizerP.*;) s nl
bl ( ) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s (/*         SeeInfoParser  ) s kanji_init (;k3P>pJs$N2r@O) ks (                */) s nl
bl ( ) s (/********************************************************/) s nl
bl ( ) s nl
bl ( ) s (public class SeeInfoParser {) s nl
bl ( ) s (  String seeInfo;) s nl
bl ( ) s nl
bl ( ) s (  // ) s (K\\Ev$O%5%$%I$N>pJs$O;}$?$;$?$/$J$$) ks nl
bl ( ) s (  // ) s ($G$b$3$&$7$J$$$H) ks ( InfoManager ) s ($,HQ;\($K$J$k$N$G!D) ks ( Flag ) s ($G$M) ks nl
bl ( ) s (  String side;) s nl
bl ( ) s nl
bl ( ) s (  int time;) s nl
bl ( ) s nl
bl ( ) s (  int playerCount;  // ) s (%W%l%$%d?t%+%&%s%?) ks nl
bl ( ) s (  int goalCount; // ) s (%4!<%k?t%+%&%s%?) ks nl
bl ( ) s (  int flagCount; // ) s (%U%i%0?t%+%&%s%?) ks nl
bl ( ) s (  int lineCount; // ) s (%i%$%s?t%+%&%s%?) ks nl
bl ( ) s (    ) s nl
bl ( ) s (  PlayerInfo[] players = new PlayerInfo[21];) s nl
bl ( ) s (  BallInfo ball = new BallInfo\(\);) s nl
bl ( ) s (  GoalInfo[] goals = new GoalInfo[2];) s nl
bl ( ) s (  FlagInfo[] flags = new FlagInfo[51];) s nl
bl ( ) s (  LineInfo[] lines = new LineInfo[4];) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public SeeInfoParser\(\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      System.out.println\("Creating BodyInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (  // String si : ) s (;k3P>pJs) ks nl
bl ( ) s (  // String s  : ) s (%5%$%I) ks nl
bl ( ) s (  public SeeInfoParser\(String si,String s\){) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      System.out.println\("Creating BodyInfoParser."\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    setInfo\(si\);) s nl
bl ( ) s (    setSide\(s\);) s nl
bl ( ) s nl
bl ( ) s (    parseInfo\(\);) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void setInfo\(String si\){) s nl
bl ( ) s (    seeInfo = si;) s nl

endpage
2 startpage
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void setSide\(String s\){) s nl
bl ( ) s (    side = s;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public void parseInfo\(\){) s nl
bl ( ) s (    // cleanAll\(\);  //  ) s (A]=|$rK:$l$J$$) ks (!) s nl
bl ( ) s nl
bl ( ) s (    this.playerCount = 0;) s nl
bl ( ) s (    this.goalCount = 0;) s nl
bl ( ) s (    this.flagCount = 0;) s nl
bl ( ) s (    this.lineCount = 0;) s nl
bl ( ) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(seeInfo\);) s nl
bl ( ) s (    // ) s (@Z$j=P$7$?%H!<%/%s$rF~$l$kH"!#;H$$2s$9$3$HB?$7) ks nl
bl ( ) s (    String token;) s nl
bl ( ) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      if\(!token.equals\("see"\)\){) s nl
bl ( ) s (        System.out.println\("SeeInfoParser:1:parseInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    time = Integer.valueOf\(token\).intValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    while\(tokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (      token = tokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(token.startsWith\("\(\(player"\) || ) s nl
bl ( ) s (         token.startsWith\("\(\(Player"\)\){) s nl
bl ( ) s (        players[playerCount] = parsePlayerInfo\(token\);) s nl
bl ( ) s (        playerCount++;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("\(\(flag"\)\){) s nl
bl ( ) s (        flags[flagCount] = parseFlagInfo\(token,side\);) s nl
bl ( ) s (        flagCount++;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("\(\(goal"\)\){) s nl
bl ( ) s (        goals[goalCount] = parseGoalInfo\(token,side\);) s nl
bl ( ) s (        goalCount++;) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(token.startsWith\("\(\(line"\)\){) s nl
bl ( ) s (        lines[lineCount] = parseLineInfo\(token\);) s nl
bl ( ) s (        lineCount++;) s nl
bl ( ) s (      }) s nl
bl ( ) s (     else if\(token.startsWith\("\(\(ball"\) || ) s nl
bl ( ) s (             token.startsWith\("\(\(Ball"\)\){) s nl
bl ( ) s (        ball = parseBallInfo\(token\);) s nl
bl ( ) s (        ball.setTime\(time\);  // ) s (;~4V>pJs$r$D$1$F$*$/) ks nl
bl ( ) s (     }) s nl
bl ( ) s (    }) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  PlayerInfo parsePlayerInfo\(String info\){) s nl
bl ( ) s (    String token;) s nl

endpage
%%Page: 2 2
3 startpage
bl ( ) s (    String teamname;) s nl
bl ( ) s (    int uniformNum = 0;) s nl
bl ( ) s (    double dist, dir, distChange, dirChange, bodyFaceDir, headFaceDir;) s nl
bl ( ) s (    teamname = "";) s nl
bl ( ) s (    PlayerInfo playerInfo;) s nl
bl ( ) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(info\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\); ) s nl
bl ( ) s (    STokenizer typeTokenizer = new STokenizer\(token\);) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      if\(!token.equals\("player"\) && !token.equals\("Player"\)\){) s nl
bl ( ) s (        System.out.println\("SeeInfoParser:2:parsePlayerInfo\(\)Illegal Format!"\);) s nl
bl ( ) s (        return null;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    if\(typeTokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (      teamname = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(typeTokenizer.hasMoreSTokens\(\)\)) s nl
bl ( ) s (        uniformNum = Integer.valueOf\(typeTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    ) s nl
bl ( ) s (    dist = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    dir  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(tokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (      distChange = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (      dirChange = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(tokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (        bodyFaceDir = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (        headFaceDir = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (        playerInfo = new PlayerInfo\(dist,dir,distChange,) s nl
bl ( ) s (                                    dirChange,bodyFaceDir,headFaceDir\);) s nl
bl ( ) s (      } else {) s nl
bl ( ) s (          playerInfo = new PlayerInfo\(dist,dir,distChange,dirChange\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (    } else {) s nl
bl ( ) s (        playerInfo = new PlayerInfo\(dist,dir\);) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    playerInfo.setTeamname\(teamname\);) s nl
bl ( ) s (    playerInfo.setUniformNum\(uniformNum\);) s nl
bl ( ) s nl
bl ( ) s (    return playerInfo;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (// ) s kanji_init (%U%i%0>pJs$N2r@O) ks (  ) s ($+$J$j8+$K$/$$) ks nl
bl ( ) s (  FlagInfo parseFlagInfo\(String info,String side\){) s nl
bl ( ) s (    String token;) s nl
bl ( ) s nl
bl ( ) s (    double dist,dir;) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(info\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    STokenizer typeTokenizer = new STokenizer\(token\);) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    FlagInfo flagInfo;) s nl
bl ( ) s nl

endpage
4 startpage
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){ ) s nl
bl ( ) s (      if\(!token.equals\("flag"\)\){) s nl
bl ( ) s (        System.out.println\("SeeInfoParser:3:parseFlagInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return null;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    dist = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    dir  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(token.equals\("c"\)\){) s nl
bl ( ) s (      if\(typeTokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (        token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s (        flagInfo = new FlagInfo\(dist,dir,"c",token,side\);) s nl
bl ( ) s (      } else {) s nl
bl ( ) s (          flagInfo = new FlagInfo\(dist,dir\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("p"\) || token.equals\("g"\)\){) s nl
bl ( ) s (      String loc1,loc2;) s nl
bl ( ) s nl
bl ( ) s (      loc1 = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s (      loc2 = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      flagInfo = new FlagInfo\(dist,dir,token,loc1,loc2,side\);) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("l"\) || token.equals\("r"\)\){) s nl
bl ( ) s (      String loc1,loc2;) s nl
bl ( ) s (      loc1 = token;) s nl
bl ( ) s (      loc2 = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(loc2.equals\("0"\)\){) s nl
bl ( ) s (        flagInfo = new FlagInfo\(dist,dir,) s nl
bl ( ) s (                                loc1,loc2,side\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (      else if\(typeTokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (        int pitch = Integer.valueOf\(typeTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (        flagInfo = new FlagInfo\(dist,dir,loc1,loc2,pitch,side\);) s nl
bl ( ) s (      } else {) s nl
bl ( ) s (          flagInfo = new FlagInfo\(dist,dir,loc1,loc2,side\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    else if\(token.equals\("t"\) || token.equals\("b"\)\){) s nl
bl ( ) s (      String loc1,loc2;) s nl
bl ( ) s (      loc1 = token;) s nl
bl ( ) s (      loc2 = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (      if\(loc2.equals\("0"\)\){) s nl
bl ( ) s (        flagInfo = new FlagInfo\(dist,dir,loc1,side\);) s nl
bl ( ) s (      } else {) s nl
bl ( ) s (        int pitch = Integer.valueOf\(typeTokenizer.nextSToken\(\)\).intValue\(\);) s nl
bl ( ) s (        flagInfo = new FlagInfo\(dist,dir,loc1,loc2,pitch,side\);) s nl
bl ( ) s (      }) s nl
bl ( ) s (    } ) s nl
bl ( ) s (    else {) s nl
bl ( ) s (      flagInfo = new FlagInfo\(dist,dir\);) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      flagInfo.printInfo\(\);) s nl
bl ( ) s (    }) s nl
bl ( ) s nl

endpage
%%Page: 3 3
5 startpage
bl ( ) s (    return flagInfo;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (// ) s kanji_init (%4!<%k>pJs$N2r@O) ks nl
bl ( ) s (  GoalInfo parseGoalInfo\(String info,String side\){) s nl
bl ( ) s (    String token;) s nl
bl ( ) s (    GoalInfo goalInfo;) s nl
bl ( ) s nl
bl ( ) s (    double dist,dir;) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(info\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    STokenizer typeTokenizer = new STokenizer\(token\);) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\) {) s nl
bl ( ) s (      if\(!token.equals\("goal"\)\){) s nl
bl ( ) s (        System.out.println\("SeeInfoParser:4:parseGoalInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return null;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    dist = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    dir  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    goalInfo = new GoalInfo\(dist,dir,token,side\);) s nl
bl ( ) s nl
bl ( ) s (    return goalInfo;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (// ) s (%i%$%s>pJs$N2r@O) ks nl
bl ( ) s (  LineInfo parseLineInfo\(String info\){) s nl
bl ( ) s (    String token;) s nl
bl ( ) s (    LineInfo lineInfo;) s nl
bl ( ) s nl
bl ( ) s (    double dist,dir;) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(info\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    STokenizer typeTokenizer = new STokenizer\(token\);) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\) {) s nl
bl ( ) s (      if\(!token.equals\("line"\)\){) s nl
bl ( ) s (        System.out.println\("token? : " + token\);) s nl
bl ( ) s (        System.out.println\("SeeInfoParser:5:parseLineInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return null;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    dist = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    dir  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    lineInfo = new LineInfo\(dist,dir,token\);) s nl
bl ( ) s nl
bl ( ) s (    return lineInfo;) s nl
bl ( ) s nl
bl ( ) s (  }) s nl

endpage
6 startpage
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s (// ) s (%\\!<%k>pJs$N2r@O) ks nl
bl ( ) s (  BallInfo parseBallInfo\(String info\){) s nl
bl ( ) s (    String token;) s nl
bl ( ) s (    BallInfo ballInfo;) s nl
bl ( ) s nl
bl ( ) s (    double dist,dir,distChange,dirChange;) s nl
bl ( ) s (    STokenizer tokenizer = new STokenizer\(info\);) s nl
bl ( ) s (    token = tokenizer.nextSToken\(\);) s nl
bl ( ) s (    STokenizer typeTokenizer = new STokenizer\(token\);) s nl
bl ( ) s (    token = typeTokenizer.nextSToken\(\);) s nl
bl ( ) s nl
bl ( ) s (    /*) s nl
bl ( ) s (    if\(Generic.DEBUG\){) s nl
bl ( ) s (      if\(!token.equals\("ball"\) && !token.equals\("Ball"\)\){) s nl
bl ( ) s (        System.out.println\("SeeBallParser:6:parseLineInfo\(\) Illegal Format!"\);) s nl
bl ( ) s (        return null;) s nl
bl ( ) s (      }) s nl
bl ( ) s (    }) s nl
bl ( ) s (    */) s nl
bl ( ) s nl
bl ( ) s (    dist = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (    dir  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (    if\(tokenizer.hasMoreSTokens\(\)\){) s nl
bl ( ) s (      distChange = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s (      dirChange  = Double.valueOf\(tokenizer.nextSToken\(\)\).doubleValue\(\);) s nl
bl ( ) s nl
bl ( ) s (      ballInfo = new BallInfo\(dist,dir,distChange,dirChange\);) s nl
bl ( ) s (    } else {) s nl
bl ( ) s (        ballInfo = new BallInfo\(dist,dir\);) s nl
bl ( ) s (    }) s nl
bl ( ) s nl
bl ( ) s (    return ballInfo;) s nl
bl ( ) s (  }) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getTime\(\){) s nl
bl ( ) s (    return this.time;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getPlayerNum\(\){) s nl
bl ( ) s (    return this.playerCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getGoalNum\(\){) s nl
bl ( ) s (    return this.goalCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getFlagNum\(\){) s nl
bl ( ) s (    return this.flagCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public int getLineNum\(\){) s nl
bl ( ) s (    return this.lineCount;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl

endpage
%%Page: 4 4
7 startpage
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public boolean hasBallInfo\(\){) s nl
bl ( ) s (    if\(ball != null\)) s nl
bl ( ) s (      return Generic.NS_TRUE;) s nl
bl ( ) s (    else) s nl
bl ( ) s (      return Generic.NS_FALSE;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (    // n) s kanji_init (HVL\\$N$=$l$>$l$N%*%V%8%'%/%H$rJV$9) ks nl
bl ( ) s (    // ) s (Fs=E) ks ( delete ) s ($,I]$$$N$G%$%s%9%?%s%9$rJV$7$F$^$9) ks nl
bl ( ) s (    // Info ) s (7O$N%a%s%PJQ?t$K$O%]%$%s%?;H$C$F$J$$$N$GB?J,$3$l$G) ks ( OK) s nl
bl ( ) s (    // ) s (30B&$G%]%$%s%?$K$$$l$?>l9g$K$O$-$A$s$H) ks ( delete ) s ($9$k$3$H) ks nl
bl ( ) s (    // ) s ($d$C$Q%,%Y!<%8%3%l%/%7%g%s$,L5$$8@8l$O%*%V%8%'%/%H$r) ks ( delete ) s ($9$k) ks nl
bl ( ) s (    // ) s (>l=j$r>o$K0U<1$7$D$D=q$+$M$P) ks nl
bl ( ) s (  public PlayerInfo getPlayerInfo\(int n\){) s nl
bl ( ) s (    return this.players[n];) s nl
bl ( ) s (    // ) s (CMEO$7$G$"$k$3$H$KCm0U) ks nl
bl ( ) s (    // return ) s (;~$K%$%s%9%?%s%9$,J#@=$5$l$F$^$9) ks nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public GoalInfo getGoalInfo\(int n\){) s nl
bl ( ) s (    return this.goals[n];) s nl
bl ( ) s (    // ) s (CMEO$7$G$"$k$3$H$KCm0U) ks nl
bl ( ) s (    // return ) s (;~$K%$%s%9%?%s%9$,J#@=$5$l$F$^$9) ks nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  FlagInfo getFlagInfo\(int n\){) s nl
bl ( ) s (    return this.flags[n];) s nl
bl ( ) s (    // ) s (CMEO$7$G$"$k$3$H$KCm0U) ks nl
bl ( ) s (    // return ) s (;~$K%$%s%9%?%s%9$,J#@=$5$l$F$^$9) ks nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public LineInfo getLineInfo\(int n\){) s nl
bl ( ) s (    return this.lines[n];) s nl
bl ( ) s (    // ) s (CMEO$7$G$"$k$3$H$KCm0U) ks nl
bl ( ) s (    // return ) s (;~$K%$%s%9%?%s%9$,J#@=$5$l$F$^$9) ks nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public BallInfo getBallInfo\(\){) s nl
bl ( ) s (    return this.ball;) s nl
bl ( ) s (    // ) s (CMEO$7$G$"$k$3$H$KCm0U) ks nl
bl ( ) s (    // return ) s (;~$K%$%s%9%?%s%9$,J#@=$5$l$F$^$9) ks nl
bl ( ) s (  }) s nl
bl ( ) s nl
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (    // ) s (%*%V%8%'%/%H$r3JG<$7$F$$$kG[Ns$=$N$b$N$X$N%]%$%s%?$rJV$9) ks nl
bl ( ) s (    // ) s (@dBP$K30B&$G) ks ( delete ) s ($7$J$$$3$H) ks nl
bl ( ) s (    // ) s ($3$$$D$r) ks ( delete ) s ($9$k$N$OLLE]$J$N$GIaDL$7$J$$$H;W$&$,!D) ks nl
bl ( ) s (    // ) s ($3$NFs<oN`$O?t$,B?$$$?$a$K4X?t8F$S=P$7$N%*!<%P%X%C%I$r) ks nl
bl ( ) s (    // ) s (5$$K$7$FFCJL$KMQ0U$7$?$@$1) ks nl
bl ( ) s (  public PlayerInfo[] getPlayers\(\){) s nl
bl ( ) s (    return this.players;) s nl
bl ( ) s (  }) s nl
bl ( ) s nl

endpage
8 startpage
bl ( ) s (/***************************************************************************/) s nl
bl ( ) s nl
bl ( ) s (  public FlagInfo[] getFlags\(\){) s nl
bl ( ) s (    return this.flags;) s nl
bl ( ) s (  }) s nl
bl ( ) s ( ) s nl
bl ( ) s (}) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl
bl ( ) s nl

endpage

cleanup
%%Trailer
docsave restore end
