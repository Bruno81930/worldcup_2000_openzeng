// parameters.hxx
//
/////////////////////////////////////////////////////////////////////////////

	P(chars,    SAY_MESSAGE_LETTERS,    "0123456789"
										"abcdefghijklmnopqrstuvwxyz"
										"ABCDEFGHIJKLMNOPQRSTUVWXYZ"
										".+-*/?<>_")


// Soccer Server のソースコードで、#define されている値。

	P(int,		TIMEDELTA,				10)
	P(double,   PITCH_LENGTH,           105.0)
	P(double,   PITCH_WIDTH,            68.0)
	P(double,   PITCH_MARGIN,           5.0)
	P(double,   CENTER_CIRCLE_R,        9.15)
	P(double,   PENALTY_AREA_LENGTH,    16.5)
	P(double,   PENALTY_AREA_WIDTH,     40.32)
	P(double,   GOAL_AREA_LENGTH,       5.5)
	P(double,   GOAL_AREA_WIDTH,        18.32)
	P(double,   GOAL_DEPTH,             2.44)
	P(double,   PENALTY_SPOT_DIST,      11.0)
	P(double,   CORNER_ARC_R,           1.0)
	P(double,   KICK_OFF_CLEAR_DISTANCE, CENTER_CIRCLE_R())
	//P(int,      MAX_PLAYER,             11)
	P(double,   UNUM_FAR_LENGTH,        20.0)
	P(double,   UNUM_TOOFAR_LENGTH,     40.0)
	P(double,   TEAM_FAR_LENGTH,        40.0)
	P(double,   TEAM_TOOFAR_LENGTH,     60.0)
	
	P(chars,    LEFT_STR,               "l")
	P(chars,    RIGHT_STR,              "r")


// 設定ファイルから読み込まれる値。

	P(double,   goal_width,             DEFAULT_GOAL_WIDTH)
	P(double,   player_size,            1.0)
	P(double,   player_decay,           0.5)
	P(double,   player_rand,            0.1)
	P(double,   player_weight,          60.0)
	P(double,   player_speed_max,       32.0)
	P(double,   stamina_max,            2500.0)
	P(double,   stamina_inc_max,        50.0)
	P(double,   recover_dec_thr,        0.3)
	P(double,   recover_min,            0.1)
	P(double,   recover_dec,            0.05)
	P(double,   effort_dec_thr,         0.4)
	P(double,   effort_min,             0.1)
	P(double,   effort_dec,             0.05)
	P(double,   effort_inc_thr,         0.9)
	P(double,   effort_inc,             0.05)
	P(double,   ball_size,              0.15)
	P(double,   ball_decay,             0.8)
	P(double,   ball_rand,              0.2)
	P(double,   ball_weight,            0.2)
	P(double,   ball_speed_max,         32.0)
	P(double,   dash_power_rate,        0.1)
	P(double,   kick_power_rate,        0.1)
	P(double,   kickable_margin,        1.0)
	P(double,   control_radius,         2.0)
	P(double,   catch_probability,      1.0)
	P(double,   catchable_area_l,       2.0)
	P(double,   catchable_area_w,       1.0)
	P(double,   maxpower,               100.0)
	P(double,   minpower,               -30.0)
	P(double,   maxmoment,              180)
	P(double,   minmoment,              -180)
	P(double,   maxneckmoment,          180)
	P(double,   minneckmoment,          -180)
	P(double,   maxneckang,             90)
	P(double,   minneckang,             -90)
	P(double,   visible_angle,          90.0)
	P(double,   visible_distance,       3.0)
	P(double,   audio_cut_dist,         50.0)
	P(double,   quantize_step,          0.1)
	P(double,   quantize_step_l,        0.01)
	P(double,   ckick_margin,           1.0)
	P(double,   wind_dir,               0.0)
	P(double,   wind_force,             10.0)
	P(double,   wind_rand,              0.3)
	P(double,   inertia_moment,         5.0)
	P(bool,     wind_none,              false)
	P(bool,     wind_random,            false)
	P(int,      half_time,              600)
	P(int,      port,                   6000)
	P(int,      coach_port,             6001)
	P(int,      olcoach_port,           6002)
	P(int,      say_coach_cnt_max,      128)
	P(int,      say_coach_msg_size,     128)
	Q(int,      simulator_step,         100)
	Q(int,      send_step,              150)
	Q(int,      recv_step,              20)
	Q(int,      sense_body_step,        100)
	P(int,      say_msg_size,           256)
	P(int,      hear_max,               2)
	P(int,      hear_inc,               1)
	P(int,      hear_decay,             1)
	P(int,      catch_ban_cycle,        5)
	P(bool,     coach,                  false)
	P(bool,     coach_w_referee,        false)
	P(bool,     old_coach_hear,         false)
	Q(int,      send_vi_step,           100)
	P(bool,     use_offside,            true)
	P(double,   offside_active_area_size, 9.15)
	P(bool,     forbid_kick_off_offside, false)
	P(chars,    log_file,               0)
	P(chars,    record,                 0)
	P(int,      record_version,         2)
	P(bool,     record_log,             false)
	P(bool,     send_log,               true)
	P(bool,     verbose,                false)
	P(chars,    replay,                 0)
	P(double,	offside_kick_margin,	0)
